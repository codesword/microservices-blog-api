// Code generated by protoc-gen-go.
// source: blog/blog.proto
// DO NOT EDIT!

package blog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Id struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Id) Reset()                    { *m = Id{} }
func (m *Id) String() string            { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()               {}
func (*Id) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type Slug struct {
	Slug string `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
}

func (m *Slug) Reset()                    { *m = Slug{} }
func (m *Slug) String() string            { return proto.CompactTextString(m) }
func (*Slug) ProtoMessage()               {}
func (*Slug) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type Comment struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	PostId    string `protobuf:"bytes,4,opt,name=post_id,json=postId" json:"post_id,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type Comments struct {
	Values []*Comment `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *Comments) Reset()                    { *m = Comments{} }
func (m *Comments) String() string            { return proto.CompactTextString(m) }
func (*Comments) ProtoMessage()               {}
func (*Comments) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *Comments) GetValues() []*Comment {
	if m != nil {
		return m.Values
	}
	return nil
}

type Post struct {
	Id        string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title     string     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Slug      string     `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	Body      string     `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Comments  []*Comment `protobuf:"bytes,5,rep,name=comments" json:"comments,omitempty"`
	CreatedAt string     `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt string     `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Post) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type Posts struct {
	Values []*Post `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *Posts) Reset()                    { *m = Posts{} }
func (m *Posts) String() string            { return proto.CompactTextString(m) }
func (*Posts) ProtoMessage()               {}
func (*Posts) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Posts) GetValues() []*Post {
	if m != nil {
		return m.Values
	}
	return nil
}

type BlogListRequest struct {
	SearchText     string `protobuf:"bytes,1,opt,name=search_text,json=searchText" json:"search_text,omitempty"`
	PageNumber     int32  `protobuf:"varint,2,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	ResultsPerPage int32  `protobuf:"varint,3,opt,name=results_per_page,json=resultsPerPage" json:"results_per_page,omitempty"`
}

func (m *BlogListRequest) Reset()                    { *m = BlogListRequest{} }
func (m *BlogListRequest) String() string            { return proto.CompactTextString(m) }
func (*BlogListRequest) ProtoMessage()               {}
func (*BlogListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func init() {
	proto.RegisterType((*Empty)(nil), "blog.Empty")
	proto.RegisterType((*Id)(nil), "blog.Id")
	proto.RegisterType((*Slug)(nil), "blog.Slug")
	proto.RegisterType((*Comment)(nil), "blog.Comment")
	proto.RegisterType((*Comments)(nil), "blog.Comments")
	proto.RegisterType((*Post)(nil), "blog.Post")
	proto.RegisterType((*Posts)(nil), "blog.Posts")
	proto.RegisterType((*BlogListRequest)(nil), "blog.BlogListRequest")
}

func init() { proto.RegisterFile("blog/blog.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x49, 0x9a, 0x3f, 0xed, 0x29, 0xb6, 0x32, 0x14, 0x0c, 0x82, 0x58, 0x02, 0x42, 0x45,
	0xa8, 0xa8, 0x4f, 0x50, 0xc5, 0x8b, 0x82, 0x48, 0x89, 0xde, 0x87, 0x24, 0x73, 0x88, 0x81, 0x24,
	0x13, 0x67, 0xce, 0x48, 0x7b, 0xe1, 0xd3, 0xf8, 0x1c, 0xbe, 0xdb, 0x32, 0x93, 0x69, 0x17, 0xb2,
	0xcb, 0xde, 0x84, 0x39, 0xdf, 0x2f, 0x61, 0xce, 0xef, 0x23, 0xb0, 0x2e, 0x5b, 0x51, 0xbf, 0x37,
	0x8f, 0xfd, 0x20, 0x05, 0x09, 0x16, 0x98, 0x73, 0x1a, 0x43, 0xf8, 0xb5, 0x1b, 0xe8, 0x92, 0x6e,
	0xc0, 0x3f, 0x72, 0xb6, 0x02, 0xbf, 0xe1, 0x89, 0xb7, 0xf5, 0x76, 0x8b, 0xcc, 0x6f, 0x78, 0xfa,
	0x12, 0x82, 0x1f, 0xad, 0xae, 0x19, 0x83, 0x40, 0xb5, 0xba, 0x76, 0xc4, 0x9e, 0xd3, 0x7f, 0x1e,
	0xc4, 0x5f, 0x44, 0xd7, 0x61, 0x4f, 0xd3, 0xef, 0x58, 0x02, 0x71, 0x25, 0x7a, 0xc2, 0x9e, 0x12,
	0xdf, 0x86, 0xd7, 0x91, 0xbd, 0x80, 0x58, 0x2b, 0x94, 0x79, 0xc3, 0x93, 0x99, 0x25, 0x91, 0x19,
	0x8f, 0xdc, 0x80, 0x41, 0x28, 0x32, 0x20, 0x18, 0x81, 0x19, 0x8f, 0x9c, 0xbd, 0x02, 0xa8, 0x24,
	0x16, 0x84, 0x3c, 0x2f, 0x28, 0x09, 0x2d, 0x5b, 0xb8, 0xe4, 0x40, 0x06, 0xeb, 0x81, 0x5f, 0x71,
	0x34, 0x62, 0x97, 0x1c, 0x28, 0xfd, 0x00, 0x73, 0xb7, 0xa4, 0x62, 0x6f, 0x20, 0xfa, 0x53, 0xb4,
	0x1a, 0x55, 0xe2, 0x6d, 0x67, 0xbb, 0xe5, 0xc7, 0x67, 0x7b, 0xdb, 0x87, 0xe3, 0x99, 0x83, 0xe9,
	0x7f, 0x0f, 0x82, 0x93, 0x50, 0x0f, 0xad, 0x36, 0x10, 0x52, 0x43, 0x2d, 0x3a, 0xa7, 0x71, 0xb8,
	0x75, 0x33, 0xbb, 0xef, 0xc6, 0x64, 0xa5, 0xe0, 0x17, 0x67, 0x62, 0xcf, 0xec, 0x2d, 0xcc, 0x2b,
	0xb7, 0x49, 0x12, 0x3e, 0x76, 0xff, 0x0d, 0x4f, 0x94, 0xa3, 0xa7, 0x95, 0xe3, 0xa9, 0xf2, 0x3b,
	0x08, 0xcd, 0xfa, 0x8a, 0xa5, 0x13, 0x5f, 0x18, 0xef, 0x33, 0xf0, 0x26, 0xfb, 0x17, 0xd6, 0x9f,
	0x5b, 0x51, 0x7f, 0x6b, 0x14, 0x65, 0xf8, 0x5b, 0xa3, 0x22, 0xf6, 0x1a, 0x96, 0x0a, 0x0b, 0x59,
	0xfd, 0xca, 0x09, 0xcf, 0xe4, 0xfc, 0x61, 0x8c, 0x7e, 0xe2, 0xd9, 0xbe, 0x30, 0x14, 0x35, 0xe6,
	0xbd, 0xee, 0x4a, 0x94, 0xb6, 0x8d, 0x30, 0x03, 0x13, 0x7d, 0xb7, 0x09, 0xdb, 0xc1, 0x73, 0x89,
	0x4a, 0xb7, 0xa4, 0xf2, 0x01, 0x65, 0x6e, 0x88, 0xad, 0x27, 0xcc, 0x56, 0x2e, 0x3f, 0xa1, 0x3c,
	0x15, 0x35, 0x96, 0x91, 0xfd, 0x19, 0x3f, 0xdd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x60, 0xad,
	0xc0, 0x9f, 0x02, 0x00, 0x00,
}
